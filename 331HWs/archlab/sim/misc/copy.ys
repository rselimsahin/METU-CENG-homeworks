# Ramazan Selim Sahin
# 2171999
# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program

# Sample linked list
.align 8
# Source block
src:
.quad 0x00a
.quad 0x0b0
.quad 0xc00
# Destination block
dest:
.quad 0x111
.quad 0x222
.quad 0x333

main:	irmovq src,%rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block		# rsum(array, 4)
	ret

/* $begin copy-ys */
copy_block:
	xorq %rax,%rax		# sum = 0
	andq %rdx,%rdx		# Set condition codes
	jmp    test
loop:
	mrmovq (%rdi),%r10	# Get *start
	rmmovq %r10,(%rsi)
	xorq %r10,%rax          # Add to sum
	irmovq $8, %r10
	addq %r10,%rdi           # start++
	addq %r10,%rsi
	irmovq $-1, %r11
	addq %r11,%rdx          # count--
test:
	jg    loop             # Stop when 0
	ret
/* $end copy-ys */

# The stack starts here and grows to lower addresses
	.pos 0x100
stack:
